--Flashback data archives
it stores changes made to a table over a period of time and provide us with a full audit trail.
once created it and add table to it we can
1) view rows as they were at a specific timestamp
2) view rows as they were between two timestamp

--create a flashback archive and named it as test_archive
CREATE FLASHBACK ARCHIVE test_archive
TABLESPACE example
QUOTA 1 M     ---can store up to 1 megabyte of data in the example tablespace.
RETENTION 1 DAY;   -- the data in test_archive is retained for 1 day after which time the data is purched

--alter an existing table to store data in the archive
ALTER TABLE store.products FLASHBACK ARCHIVE test_archive;

--inset a row into the table store.products
INSERT INTO store.product(product_id, product_type_id, name, description, price)
VALUES(15,1,'USING LINUX','HOW TO USE LINUX',39.99);

--view the rows as they were 5 minutes ago
--note that the new row is missing because it was added to the table after the date and time specified in the query
SELECT product_id, name, price
FROM store.products
AS OF TIMESTAMP
(SYSTIMESTAMP - INTERVAL '5' MINUTE);

--view the rows as they were between two timestamps
SELECT product_id, name, price
FROM store.products VERSIONS BETWEEN TIMESTAMP
AS OF TIMESTAMP
TO_TIMESTAMP('2012-06-15 18:40:00', 'YYYY-MM-DD HH24:MI:SS')
AND TO_TIMESTAMP('2012-06-15 18:41:00', 'YYYY-MM-DD HH24:MI:SS');

--view the rows as they were between one timestamp and the present time
--view the rows as they were between two timestamps
SELECT product_id, name, price
FROM store.products VERSIONS BETWEEN TIMESTAMP
AS OF TIMESTAMP
TO_TIMESTAMP('2012-06-15 18:40:00', 'YYYY-MM-DD HH24:MI:SS')
AND MAXVALUE;

--stop archiving of data for a table
ALTER TABLE store.products NO FLASHBACK ARCHIVE;

--when creating the table we can specify a flashback archive for the table
CREATE TABLE store.test_table
(
id INTEGER,
name VARCHAR2(10)
) FLASHBACK ARCHIVE test_archive;

--alter the retention periods to 2 years
ALTER FLASHBACK ARCHIVE test_archive
MODIFY RETENTION 2 years;

--purge the data from a flashback archive before a given timestamp
ALTER FLASHBACK ARCHIVE test_archive
PURGE BEFORE TIMESTAMP(SYSTIMESTAMP -INTERVAL '1' DAY);

--purge all the data in a flashback archive
ALTER FLASHBACK ARCHIVE test_archive PURGE ALL;

--drop a flashback archive
DROP FLASHBACK ARCHIVE test_archive;

------------------------------------------------------------------

--the region of the customer_id=12 was north before 2015-10-13 7:00 pm
UPDATE customer SET region ='SOUTH' WHERE customer_id =12;

--the query below shows that the region of customer_id=12 is north
SELECT * FROM customer AS OF TIMESTAMP
TO_TIMESTAMP('2015-08-13 13:34:12','YYYY-MM-DD HH24:MI:SS')

-- UNDO_RETENTION
--FLASHBACK operation helps us to trach a specific row during a specified time period UNDO_RETENTION parameter stores the number of seconds

--see the retention for undo_retention to find out how many seconds the undo_retention can hold, it indicates the time we can track back
--we can increase the time by contacting the DBA
--the start time should always be greater than or equal to current time - 15 mintues
SHOW PARAMETER RETENTION;

SELECT versions_startscn, versions_starttime, versions_endscn, versions_endtime, versions_xid, versions_operation, 
region FROM customer
VERSIONS BETWEEN TIMESTAMP TO_TIMESTAMP('2015-10-14 19:35:00','YYYY-MM-DD HH24:MI:SS')
AND TO_TIMESTAMP('2015-10-14 19:52:00','YYYY-MM-DD HH24:MI:SS')
WHERE customer_id =12;








